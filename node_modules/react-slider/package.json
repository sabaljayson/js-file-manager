{
  "name": "react-slider",
  "version": "0.5.1",
  "description": "Slider component for React",
  "main": "react-slider.js",
  "keywords": [
    "react-component",
    "react",
    "slider",
    "component"
  ],
  "author": {
    "name": "MichaÅ‚ Powaga",
    "email": "michalpowaga13@gmail.com"
  },
  "contributors": [
    {
      "name": "Florian Klampfer",
      "email": "f.klampfer@gmail.com"
    }
  ],
  "license": "MIT",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mpowaga/react-slider.git"
  },
  "peerDependencies": {
    "react": ">=0.12.1"
  },
  "readme": "# React Slider\n\nCSS agnostic slider component for React.\n\nSee demo: [https://cell303.github.io/react-slider](https://cell303.github.io/react-slider/)\n\n### Important Note\n\nThis is an alpha release. Use with caution and hope.\n\n### Installation\n\n```sh\nnpm install react-slider\n```\n\n### Overview\n\n#### Single slider:\n\nSimilar to `<input type=\"range\" defaultValue={50} />`\n\n```javascript\nReact.render(<ReactSlider defaultValue={50} />, document.body);\n```\n\n#### Double slider (with bars between the handles):\n\n```javascript\nReact.render(<ReactSlider defaultValue={[0, 100]} withBars />, document.body);\n```\n\n#### Multi slider:\n\n```javascript\nReact.render(<ReactSlider defaultValue={[0, 33, 67, 100]} withBars />, document.body);\n```\n\n#### Provide custom handles:\n\n```javascript\nReact.render(\n  <ReactSlider withBars>\n    <div className=\"my-handle\">1</div>\n    <div className=\"my-handle\">2</div>\n    <div className=\"my-handle\">3</div>\n  </ReactSlider>,\n  document.body\n);\n```\n\nNow you can style it as you want. Checkout the `index.html` example to see how.\n\n### Properties\n\n##### min {number} default: 0\n\nThe minimum value of the slider.\n\n##### max {number} default: 100\n\nThe maximum value of the slider.\n\n##### step {number} default: 1\n\nValue to be added or subtracted on each step the slider makes.\nMust be greater than zero.\n`max - min` should be evenly divisible by the step value.\n\n##### minDistance {number} default: 0\n\nThe minimal distance between any pair of handles.\nZero means they can sit on top of each other.\n\n##### defaultValue {oneOfType([number, arrayOf(number)])} default: 0\n\nDetermines the initial positions of the handles and the number of handles if the component has no children.\n\nIf a number is passed a slider with one handle will be rendered.\nIf an array is passed each value will determine the position of one handle.\nThe values in the array must be sorted.\nIf the component has children, the length of the array must match the number of children.\n\n##### value {oneOfType([number, arrayOf(number)])} default: 0\n\nLike `defaultValue` but for [controlled components](http://facebook.github.io/react/docs/forms.html#controlled-components).\n\n##### orientation {oneOf(['horizontal', 'vertical'])} default: 'horizontal'\n\nDetermines whether the slider moves horizontally (from left to right) or vertically (from top to bottom).\n\n##### className {string} default: 'slider'\n\nThe css class set on the slider node.\n\n##### handleClassName {string} default: 'handle'\n\nThe css class set on each handle node.\nIn addition each handle will receive a numbered css class of the form `${handleClassName}-${i}`,\ne.g. `handle-0`, `handle-1`, ...\n\n##### handleActiveClassName {string} default: 'active'\n\nThe css class set on the handle that is currently being moved.\n\n##### withBars {boolean} default: false\n\nIf `true` bars between the handles will be rendered.\n\n##### barClassName {string} default: 'bar'\n\nThe css class set on the bars between the handles.\nIn addition bar fragment will receive a numbered css class of the form `${barClassName}-${i}`,\ne.g. `bar-0`, `bar-1`, ...\n\n##### pearling {bool} default: false\n\nIf `true` the active handle will push other handles within the constraints of `min`, `max`, `step` and `minDistance`.\n\n##### disabled {bool} default: false\n\nIf `true` the handles can't be moved.\n\n##### snapDragDisabled {bool} default: false\n\nDisables handle move when clicking the slider bar.\n\n##### invert {bool} default: false\n\nInverts the slider.\n\n##### onBeforeChange {func}\n\nCallback called before starting to move a handle.\n\n##### onChange {func}\n\nCallback called on every value change.\n\n##### onAfterChange {func}\n\nCallback called only after moving a handle has ended or when a new value is set by clicking on the slider.\n\n##### onSliderClick {func}\n\nCallback called when the the slider is clicked (handle or bars). Receives the value at the clicked position as argument.\n\n### Methods\n\n##### getValue\n\nReturns the current value of the slider, which is a number in the case of a single slider,\nor an array of numbers in case of a multi slider.\n\n### License\n\nSee the [License](LICENSE) file.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mpowaga/react-slider/issues"
  },
  "_id": "react-slider@0.5.1",
  "_from": "react-slider@~0.5.1"
}
